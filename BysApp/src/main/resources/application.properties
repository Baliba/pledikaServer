spring.data.rest.basePath=/api

# POSTGRE
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres

#SERVER 
#spring.datasource.url=jdbc:postgresql://postgresql-12648-0.cloudclusters.net:12672/emal_bd
#spring.datasource.username=pledika
#spring.datasource.password==BL(e8eS}wb-

#CONFIG VAR
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}


#Locale
#spring.datasource.url=jdbc:postgresql://localhost:5433/emal_local_bd
#spring.datasource.url=jdbc:postgresql://localhost:5433/demo_bd
#spring.datasource.username =postgres
#spring.datasource.password =Loppe@2000


spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.properties.hibernate.globally_quoted_identifiers=true
#PORT
server.port = 8080
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=5MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
file.upload-dir=static/assets/imgs
jwt.secret={bcrypt}$donald



